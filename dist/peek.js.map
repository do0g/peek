{"version":3,"sources":["../src/peek.js"],"names":["typeOf","toString","call","obj","split","slice","toLowerCase","isFunction","fn","isPlaceHolder","identity","id","tweak","options","formatters","peekedFunctions","registerPeeked","push","_isPeeked","indexOf","functionNames","Map","_setFunctionName","name","set","_getFunctionName","get","isNilOrEmpty","notNilOrEmpty","first","list","pred","res","getFunctionName","defaultFormatters","Array","formatArg","vals","Object","String","val","formatReturnValue","formatFunction","args","result","log","maybePeek","peek","maybeName","maybeFn","indent","Error","f","peekedArgs","formattedFunction","repeat","apply","maybePeeked","err"],"mappings":"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","file":"peek.js","sourcesContent":["import { concat, join, is, always, curry, anyPass, isNil, complement, prop, isEmpty, head, tail, cond, pipe, map, T } from 'ramda';\n\nconst typeOf = obj => (\n  {}.toString.call(obj)\n    .split(' ')[1]\n    .slice(0, -1)\n    .toLowerCase()\n);\nconst isFunction = fn => typeOf(fn) === 'function';\nconst isPlaceHolder = fn => fn && fn['@@functional/placeholder'];\nconst identity = id => id;\n\nconst tweak = (options = {}) => {\n  const { formatters = [] } = options;\n  const peekedFunctions = [];\n  const registerPeeked = curry(fn => {\n    peekedFunctions.push(fn);\n    return fn;\n  });\n\n  const _isPeeked = fn => peekedFunctions.indexOf(fn) !== -1;\n\n  const functionNames = new Map();\n  const _setFunctionName = curry((fn, name) => {\n    functionNames.set(fn, name);\n    return fn;\n  });\n\n  const _getFunctionName = fn => functionNames.get(fn);\n\n  const isNilOrEmpty = anyPass([isNil, isEmpty]);\n  const notNilOrEmpty = complement(isNilOrEmpty);\n\n  const first = (list, pred = notNilOrEmpty) => (...args) => {\n    if (isNilOrEmpty(list)) return;\n    const fn = head(list);\n    const res = fn(...args);\n    return pred(res) ? res : first(tail(list), pred)(...args);\n  };\n\n  const getFunctionName = first([\n    _getFunctionName,\n    prop('name'),\n    always('anonymous')\n  ], notNilOrEmpty);\n\n  const defaultFormatters = [\n    [isPlaceHolder, () => '__'],\n    [isFunction, getFunctionName],\n    [is(Array), pipe(map(formatArg), vals => `[${join(', ', vals)}]`)],\n    [anyPass([isNil, is(Object)]), typeOf],\n    [is(String), val => `'${val}'`],\n    [T, identity]\n  ];\n\n  //const logVal = f => tap(v => console.log(`${f}${typeOf(v)} ${v}`));\n  const formatArg = cond(concat(formatters, defaultFormatters));\n  const formatReturnValue = val => val ? `${formatArg(val)}` : '';\n  const formatFunction = (fn, args, result) => `${getFunctionName(fn)}(${pipe(map(formatArg), join(', '))(args)})${formatReturnValue(result)}`;\n\n  //const logIndent = curry((indent, val) => log(`${indent}${val}`));\n  const log = (...args) => console.log(...args); // eslint-disable-line no-console\n  //const error = (...args) => console.error(...args); // eslint-disable-line no-console\n\n  const maybePeek = cond([\n    [isPlaceHolder, identity],\n    [isFunction, fn => peek(fn)],\n    [is(Array), list => map(maybePeek, list)],\n    [T, identity]\n  ]);\n\n  const maybeName = (name, maybeFn) => typeOf(maybeFn) === 'function' ? _setFunctionName(maybeFn, name) : maybeFn;\n\n  let indent = -2;\n  const peek = (fn, name) => {\n    if (typeOf(fn) !== 'function') {\n      throw new Error('What choo talkin\\' \\'bout, Willis?');\n    }\n    if (_isPeeked(fn)) {\n      return fn;\n    }\n    if (name) {\n      _setFunctionName(fn, name);\n    }\n\n    const f = (...args) => {\n      try {\n        indent += 2;\n        const peekedArgs = maybePeek(args);\n        //console.log(`peekedArgs: ${JSON.stringify(peekedArgs)}`);\n        const formattedFunction = formatFunction(fn, args);\n        log(' '.repeat(indent) + formattedFunction);\n        const result = fn.apply(fn, peekedArgs);\n        //const result = fn(...peekedArgs);\n        //console.log(`result: ${result}`);\n        const maybePeeked = maybePeek(maybeName(formattedFunction, result));\n        log(`${' '.repeat(indent)} -> ${formatArg(maybePeeked)}`);\n        return maybePeeked;\n      } catch (err) {\n        log(`${' '.repeat(indent)} (ノಠ益ಠ)ノ彡${err}`);\n        throw err;\n      } finally {\n        indent -= 2;\n      }\n    };\n    _setFunctionName(f, _getFunctionName(fn));\n    registerPeeked(f);\n    return f;\n  };\n  return peek;\n};\n\nconst peek = tweak();\n\nexport default peek;\nexport {tweak};\n"]}